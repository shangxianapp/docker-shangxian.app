pipeline {
    agent any

    options {
        timestamps()
    }

    stages {
        stage('Clone') {
            steps {
                checkout changelog: false, poll: false, scm: [$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'shangxianapp-github-xuexb-ssh-key', url: 'git@github.com:shangxianapp/docker-shangxian.app.git']]]
            }
        }

        stage('Deploy') {
            stage('sg02') {
                steps {
                    sshPublisher(publishers: [sshPublisherDesc(configName: 'sg02', transfers: [sshTransfer(cleanRemote: false, excludes: '', execCommand: '/bin/sh $WWWROOT_DIR/shangxian.app/deploy.sh', execTimeout: 120000, flatten: false, makeEmptyDirs: false, noDefaultExcludes: false, patternSeparator: '[, ]+', remoteDirectory: '$WWWROOT_DIR/shangxian.app', remoteDirectorySDF: false, removePrefix: 'html', sourceFiles: 'html/**/*')], usePromotionTimestamp: false, useWorkspaceInPromotion: false, verbose: false)])
                }
            }
        }
    }

    post {
        always {
            deleteDir()
        }
    }
}